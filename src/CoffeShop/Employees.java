/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CoffeShop;

import CoffeShop.AdminAuthDialog;
import CoffeShop.EmployeesMethods;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import java.util.List;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.time.LocalDateTime;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author jenalyn
 */
public class Employees extends javax.swing.JFrame {
    private String imageLocation;
    private boolean imageSelected = false;
    private UserAuthenticate authenticatedUser; // Instance variable
    
    sqlConnector connector = new sqlConnector();
    PreparedStatement prepState;
    ResultSet rs;
    /**
     * Creates new form Employees
     */
    public Employees() {
        initComponents();

        setTitle("Employees");

        ImageIcon icon = IconLoader.getIcon();
        Image img = icon.getImage();

        setIconImage(img);
        
        comboxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
        "Administrator", "Cashier", "Chef", "Assistant Chef", "Waiter", "Owner/Manager"
        }));
        
        Fetch();
        
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable4MouseClicked(evt);
        }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        employeeRoleTxt = new javax.swing.JLabel();
        employeNamerTxt = new javax.swing.JLabel();
        UserImageIcon = new javax.swing.JLabel();
        navbarLeft = new javax.swing.JPanel();
        btnOption = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        itemDetails = new javax.swing.JPanel();
        tblEmployees = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        employeeTable = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        crudOption = new javax.swing.JPanel();
        crudOption1 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        comboxRole = new javax.swing.JComboBox<>();
        add = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        header.setBackground(new java.awt.Color(81, 56, 33));

        employeeRoleTxt.setBackground(new java.awt.Color(255, 245, 238));
        employeeRoleTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        employeeRoleTxt.setForeground(new java.awt.Color(255, 245, 238));
        employeeRoleTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employeeRoleTxt.setText("Employee Name");

        employeNamerTxt.setBackground(new java.awt.Color(255, 245, 238));
        employeNamerTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        employeNamerTxt.setForeground(new java.awt.Color(255, 245, 238));
        employeNamerTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employeNamerTxt.setText("employeNamerTxt");

        UserImageIcon.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        UserImageIcon.setForeground(new java.awt.Color(255, 255, 255));
        UserImageIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UserImageIcon.setText("User");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(806, Short.MAX_VALUE)
                .addComponent(employeeRoleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(employeNamerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(UserImageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeRoleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeNamerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addComponent(UserImageIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        navbarLeft.setBackground(new java.awt.Color(255, 192, 135));

        btnOption.setBackground(new java.awt.Color(255, 192, 135));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/report.png"))); // NOI18N
        jButton2.setText("Reports");
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHideActionText(true);
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/menu.png"))); // NOI18N
        jButton1.setText("Menu");
        jButton1.setToolTipText("");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/product.png"))); // NOI18N
        jButton3.setText("Products");
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/employee.png"))); // NOI18N
        jButton4.setText("Employees");
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnOptionLayout = new javax.swing.GroupLayout(btnOption);
        btnOption.setLayout(btnOptionLayout);
        btnOptionLayout.setHorizontalGroup(
            btnOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOptionLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(btnOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        btnOptionLayout.setVerticalGroup(
            btnOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnOptionLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout navbarLeftLayout = new javax.swing.GroupLayout(navbarLeft);
        navbarLeft.setLayout(navbarLeftLayout);
        navbarLeftLayout.setHorizontalGroup(
            navbarLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navbarLeftLayout.createSequentialGroup()
                .addComponent(btnOption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        navbarLeftLayout.setVerticalGroup(
            navbarLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navbarLeftLayout.createSequentialGroup()
                .addComponent(btnOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 574, Short.MAX_VALUE))
        );

        getContentPane().add(navbarLeft, java.awt.BorderLayout.LINE_START);

        itemDetails.setBackground(new java.awt.Color(255, 192, 135));

        tblEmployees.setBackground(new java.awt.Color(142, 104, 69));
        tblEmployees.setPreferredSize(new java.awt.Dimension(728, 931));

        jLabel5.setBackground(new java.awt.Color(255, 245, 238));
        jLabel5.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 245, 238));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Employees");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Role", "Date of Employment", "Last Login"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        employeeTable.setViewportView(jTable4);

        javax.swing.GroupLayout tblEmployeesLayout = new javax.swing.GroupLayout(tblEmployees);
        tblEmployees.setLayout(tblEmployeesLayout);
        tblEmployeesLayout.setHorizontalGroup(
            tblEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tblEmployeesLayout.createSequentialGroup()
                .addContainerGap(299, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(323, Short.MAX_VALUE))
            .addGroup(tblEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tblEmployeesLayout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addComponent(employeeTable, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addGap(11, 11, 11)))
        );
        tblEmployeesLayout.setVerticalGroup(
            tblEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblEmployeesLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(868, Short.MAX_VALUE))
            .addGroup(tblEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tblEmployeesLayout.createSequentialGroup()
                    .addGap(82, 82, 82)
                    .addComponent(employeeTable, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(48, Short.MAX_VALUE)))
        );

        crudOption.setBackground(new java.awt.Color(255, 192, 135));
        crudOption.setForeground(new java.awt.Color(204, 204, 204));

        crudOption1.setBackground(new java.awt.Color(255, 192, 135));
        crudOption1.setForeground(new java.awt.Color(204, 204, 204));

        jLabel38.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel38.setText("Name");

        jLabel39.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel39.setText("Role");

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel41.setText("Image Path");

        txtName.setBackground(new java.awt.Color(255, 245, 238));

        comboxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        add.setText("Add Image");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jPanel4.setMaximumSize(new java.awt.Dimension(60, 60));
        jPanel4.setMinimumSize(new java.awt.Dimension(60, 60));
        jPanel4.add(jLabel6);

        jLabel1.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel4.add(jLabel1);

        txtUsername.setBackground(new java.awt.Color(255, 245, 238));

        jLabel42.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel42.setText("Username");

        jLabel43.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel43.setText("Password");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout crudOption1Layout = new javax.swing.GroupLayout(crudOption1);
        crudOption1.setLayout(crudOption1Layout);
        crudOption1Layout.setHorizontalGroup(
            crudOption1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crudOption1Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(crudOption1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd)
                    .addGroup(crudOption1Layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(btnClear)
                        .addGap(71, 71, 71))))
            .addGroup(crudOption1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(crudOption1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(crudOption1Layout.createSequentialGroup()
                        .addGroup(crudOption1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtName)
                    .addComponent(comboxRole, 0, 305, Short.MAX_VALUE)
                    .addComponent(txtUsername)
                    .addComponent(txtPassword))
                .addGap(46, 46, 46))
        );
        crudOption1Layout.setVerticalGroup(
            crudOption1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crudOption1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel39)
                .addGap(18, 18, 18)
                .addComponent(comboxRole, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jLabel41)
                .addGroup(crudOption1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(crudOption1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(add))
                    .addGroup(crudOption1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addGroup(crudOption1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        javax.swing.GroupLayout crudOptionLayout = new javax.swing.GroupLayout(crudOption);
        crudOption.setLayout(crudOptionLayout);
        crudOptionLayout.setHorizontalGroup(
            crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(crudOption1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        crudOptionLayout.setVerticalGroup(
            crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crudOptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(crudOption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout itemDetailsLayout = new javax.swing.GroupLayout(itemDetails);
        itemDetails.setLayout(itemDetailsLayout);
        itemDetailsLayout.setHorizontalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addComponent(tblEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(crudOption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        itemDetailsLayout.setVerticalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tblEmployees, javax.swing.GroupLayout.DEFAULT_SIZE, 937, Short.MAX_VALUE)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(crudOption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(itemDetails, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1335, 1009));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Method to resize the image
     private ImageIcon resizeImage(String imagePath, int width, int height) {
        // Load the image
        ImageIcon originalIcon = new ImageIcon(imagePath);
        Image originalImage = originalIcon.getImage();
        // Resize the image
        Image resizedImage = originalImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        // Return the resized ImageIcon
        return new ImageIcon(resizedImage);
    }

    // Setter method to pass and display authenticatedUser details
    public void setAuthenticatedUser(UserAuthenticate authenticatedUser) {
        this.authenticatedUser = authenticatedUser;
        setUserDetails(authenticatedUser); // Update UI based on user details
    }

    // Method to set and display user details (name, role, and image)
    public void setUserDetails(UserAuthenticate authenticatedUser) {
        this.authenticatedUser = authenticatedUser; // Set the authenticatedUser passed

        if (authenticatedUser != null) {
            // Assuming these are your GUI builder variable names for the components
            employeeRoleTxt.setText(authenticatedUser.getRole());
            employeNamerTxt.setText(authenticatedUser.getName());

            // Resize and set employee image icon
            ImageIcon userImage = resizeImage(authenticatedUser.getImagePath(), 60, 60); // Adjust size as needed
            UserImageIcon.setIcon(userImage);
        } else {
            System.out.println("User details not set.");
        }
    }
    
    // for image path

    public void selectImage() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image Files", "jpg", "png", "jpeg", "gif"));
    
        int response = fileChooser.showOpenDialog(null);
        if (response == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imageLocation = selectedFile.getAbsolutePath();
            imageSelected = true;
            displayImage(imageLocation); 
        }
    }
    
    private void displayImage(String imagePath) {
        if (imageLocation != null) {
            ImageIcon originalIcon = new ImageIcon(imageLocation);
            Image originalImage = originalIcon.getImage();
            
            int width = 100;
            int height = 100;
            
            Image scaledImage = originalImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(scaledImage);
            jLabel1.setIcon(scaledIcon);
        }
    }
    
    private String addImageToFolder() {
        if (!imageSelected) {
            JOptionPane.showMessageDialog(this, "Please select an image first.");
            return null;
        }

        String[] acceptedImageExtensions = {".jpg", ".jpeg", ".png"};
        String fileExtension = imageLocation.substring(imageLocation.lastIndexOf(".")).toLowerCase();
        boolean isImage = Arrays.asList(acceptedImageExtensions).contains(fileExtension);
        if (!isImage) {
            JOptionPane.showMessageDialog(this, "Please select a valid image file (jpg, jpeg, png, gif, bmp).", "Invalid File Type", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    
        String destinationFolder = "src/Employees/";
        String newFileName = "employee_" + System.currentTimeMillis() + fileExtension;
        String destinationPath = destinationFolder + newFileName;

        File sourceFile = new File(imageLocation);
        File destinationFile = new File(destinationPath);

        try {
            destinationFile.getParentFile().mkdirs();

            Files.copy(sourceFile.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
            return destinationPath;
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error adding image: " + e.getMessage());
            return null;
        }
    }    
    

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Reports callReports = new Reports();
        callReports.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user
        callReports.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         Dashboard callDashboard = new Dashboard(); // Instantiate Dashboard
        callDashboard.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user
        callDashboard.setVisible(true);
        this.dispose(); // Close the current frame
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Products callProducts = new Products();
        callProducts.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user
        callProducts.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Employees callEmployees = new Employees();
        callEmployees.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user
        callEmployees.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        selectImage();
    }//GEN-LAST:event_addActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        AdminAuthDialog authDialog = new AdminAuthDialog(this, true);
        authDialog.setVisible(true);
        if (authDialog.isAuthenticated()) {
            addEmployee();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        AdminAuthDialog authDialog = new AdminAuthDialog(this, true);
            authDialog.setVisible(true);
            if (authDialog.isAuthenticated()) {
            updateEmployee();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        int selectedRow = jTable4.getSelectedRow(); 
        
        if (selectedRow != -1) { 
            loadEmployeeData(selectedRow);
        }
    }//GEN-LAST:event_jTable4MouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = jTable4.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an employee to delete.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return; 
        }
        
        AdminAuthDialog authDialog = new AdminAuthDialog(this, true); 
        authDialog.setVisible(true);
        
        if (!authDialog.isAuthenticated()) {
            JOptionPane.showMessageDialog(this, "You must be an admin to delete an employee.", "Authentication Required", JOptionPane.WARNING_MESSAGE);
            return; 
        }

        String employeeIdString = jTable4.getValueAt(selectedRow, 0).toString();
        int employeeId;
        try {
            employeeId = Integer.parseInt(employeeIdString);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Employee ID format.");
            return; 
        }

        int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this employee?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

        if (confirmation == JOptionPane.YES_OPTION) {
            EmployeesMethods empMethods = new EmployeesMethods();
            boolean deleted = empMethods.deleteEmployeeById(employeeId); 

            if (deleted) {
                JOptionPane.showMessageDialog(this, "Employee deleted successfully.");

                Fetch(); 
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete employee. Please try again.", "Deletion Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    // for add method
    
    private void addEmployee() {
        String username = txtUsername.getText().trim();
        char[] password = txtPassword.getPassword();
        String name = txtName.getText().trim();
        String selectedRole = comboxRole.getSelectedItem().toString();
        String passwordStr = new String(password);

        if (username.isEmpty() || passwordStr.isEmpty() || name.isEmpty() || selectedRole.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please complete all required fields.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (selectedRole.equals("Administrator")) {
            JOptionPane.showMessageDialog(this, "Cannot add another administrator.", "Role Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (!imageSelected) {
            JOptionPane.showMessageDialog(this, "Please select an image for the employee.", "Image Required", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String storedImagePath = addImageToFolder();
        if (storedImagePath == null) {
            return;
        }
        


        Timestamp employmentTimestamp = new Timestamp(System.currentTimeMillis());
        Timestamp lastLogin = new Timestamp(System.currentTimeMillis());

        String insertQuery = "INSERT INTO tbl_employees (employee_username, employee_password, employee_name, employee_role, employee_date_of_employment, last_Login, employee_ImagePath) VALUES (?, ?, ?, ?, ?, ?, ?)";

        try (Connection conn = connector.createConnection();
             PreparedStatement pstmt = conn.prepareStatement(insertQuery)) {

            pstmt.setString(1, username);
            pstmt.setString(2, passwordStr);
            pstmt.setString(3, name);
            pstmt.setString(4, selectedRole);
            pstmt.setTimestamp(5, employmentTimestamp);
            pstmt.setTimestamp(6, lastLogin);
            pstmt.setString(7, storedImagePath);

            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Employee added successfully!");
                Fetch(); 
                clearFields(); 
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add employee.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error adding employee: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // for table
    
    private void Fetch() {
        EmployeesMethods employeeMethods = new EmployeesMethods();
        List<Employee> employees = employeeMethods.employeesMethod();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable4.getModel();
        dtm.setRowCount(0);
        
        for (Employee employee : employees) {
            Vector<String> row = new Vector<>();
            row.add(String.valueOf(employee.getEmployeeID()));
            row.add(employee.getEmployeeName());
            row.add(employee.getEmployeeRole());
            row.add(String.valueOf(employee.getEmployeeDateOfEmployment()));
            row.add(String.valueOf(employee.getLastLogin()));
            dtm.addRow(row);
        }
    }
    
    
    // for update method
    
    private void loadEmployeeData(int selectedRow) {
        // Get the employee ID from the selected row
        int employeeID = Integer.parseInt(jTable4.getValueAt(selectedRow, 0).toString());

        EmployeesMethods employeeMethods = new EmployeesMethods();
        Employee selectedEmployee = employeeMethods.getEmployeeById(employeeID); 
        
        if (selectedEmployee != null) {
            txtName.setText(selectedEmployee.getEmployeeName());
            comboxRole.setSelectedItem(selectedEmployee.getEmployeeRole());
            txtUsername.setText(selectedEmployee.getEmployeeUsername());
            txtPassword.setText(selectedEmployee.getEmployeePassword());
            displayImage(selectedEmployee.getImagePath());
            imageLocation = selectedEmployee.getImagePath(); 
            imageSelected = true; 
        } else {
            JOptionPane.showMessageDialog(this, "Employee not found.");
        }
    }


    private void updateEmployee() {
        int selectedRow = jTable4.getSelectedRow(); 

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an employee from the table.");
            return;
        }

        String name = txtName.getText().trim();
        String role = comboxRole.getSelectedItem().toString();
        String username = txtUsername.getText().trim();
        char[] password = txtPassword.getPassword();
        
        String imagePath;
        
        if (password.length == 0) {
            JOptionPane.showMessageDialog(this, "Password cannot be empty.");
            return;
        }
        
        String passwordStr = new String(password); 

        if (imageSelected) {
           imagePath = addImageToFolder(); 
           if (imagePath == null) {
               JOptionPane.showMessageDialog(this, "Failed to add image. Please try again.");
               return;
           }
       } else {
           imagePath = jTable4.getValueAt(selectedRow, 5).toString(); 
       }
     
        if (imageSelected) {
            imagePath = addImageToFolder(); 
            if (imagePath == null) {
                JOptionPane.showMessageDialog(this, "Failed to add image. Please try again.");
                return;
            }
        } else {
            imagePath = jTable4.getValueAt(selectedRow, 5).toString(); 
        }

        int employeeID;
        try {
            employeeID = Integer.parseInt(jTable4.getValueAt(selectedRow, 0).toString());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid employee ID.");
            return;
        }
        LocalDateTime employeeDateOfEmployment = LocalDateTime.now(); // or fetch existing if needed
        LocalDateTime lastLogin = LocalDateTime.now(); // set this appropriately

        Employee updatedEmployee = new Employee(employeeID, username, passwordStr, name, role, employeeDateOfEmployment, lastLogin, imagePath);

        EmployeesMethods employeeMethods = new EmployeesMethods();
        employeeMethods.updateEmployee(updatedEmployee);


        Fetch(); 
    }
    
    // for clearing fields
    private void clearFields() {
        txtUsername.setText("");
        txtPassword.setText("");
        txtName.setText("");
        comboxRole.setSelectedIndex(0);
        jLabel1.setIcon(null); 
        imageSelected = false;
        imageLocation = null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employees.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employees().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UserImageIcon;
    private javax.swing.JButton add;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JPanel btnOption;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboxRole;
    private javax.swing.JPanel crudOption;
    private javax.swing.JPanel crudOption1;
    private javax.swing.JLabel employeNamerTxt;
    private javax.swing.JLabel employeeRoleTxt;
    private javax.swing.JScrollPane employeeTable;
    private javax.swing.JPanel header;
    private javax.swing.JPanel itemDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTable jTable4;
    private javax.swing.JPanel navbarLeft;
    private javax.swing.JPanel tblEmployees;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables


}

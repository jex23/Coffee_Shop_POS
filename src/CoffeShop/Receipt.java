/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CoffeShop;

import java.awt.Graphics;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextArea; // Import JTextArea for setting the receipt text

/**
 *
 * @author James
 */
public class Receipt extends javax.swing.JFrame {

    /**
     * Creates new form Receipt
     */
    public Receipt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        receiptTxtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        receiptTxtArea.setColumns(20);
        receiptTxtArea.setRows(5);
        jScrollPane2.setViewportView(receiptTxtArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(printButton)
                .addGap(38, 38, 38)
                .addComponent(closeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closeButton)
                    .addComponent(printButton))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose(); // If this method is in a JFrame class
    }//GEN-LAST:event_closeButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        PrinterJob printerJob = PrinterJob.getPrinterJob();
    
    printerJob.setPrintable(new Printable() {
        @Override
        public int print(Graphics g, PageFormat pf, int pageIndex) throws PrinterException {
            if (pageIndex > 0) {
                return Printable.NO_SUCH_PAGE; // Only one page to print
            }

            // Retrieve the receipt text and draw it on the graphics context
            String receiptText = receiptTxtArea.getText(); // Assuming you have a JTextArea for the receipt
            String[] lines = receiptText.split("\n");
            int y = 100; // Starting Y position for drawing text
            for (String line : lines) {
                g.drawString(line, 50, y); // Draw each line with X and Y offset
                y += 15; // Increment Y position for the next line
            }

            return Printable.PAGE_EXISTS; // Indicate that the page exists
        }
    });

    boolean doPrint = printerJob.printDialog(); // Show the print dialog
    if (doPrint) {
        try {
            printerJob.print(); // Print the document
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(this, "Printing error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_printButtonActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    public void displayReceipt(String date, String time, String saleId, String employeeName,
            List<SaleItem> saleItems, double subtotal, double vat, double total,
            String paymentMethod, double amount, double change, double totalAmount) {
        StringBuilder receiptBuilder = new StringBuilder();
        receiptBuilder.append("          Kapelecious\n");
        receiptBuilder.append("          Bagumbayan St.\n");
        receiptBuilder.append("         Ligao City, Centro\n");
        receiptBuilder.append("        Mobile: 09510074856\n\n");
        receiptBuilder.append("----------------------------------------\n");
        receiptBuilder.append(String.format("Date:                %s\n", date));
        receiptBuilder.append(String.format("Time:                %s\n", time));
        receiptBuilder.append(String.format("Sale ID:             #%s\n", saleId)); // Display Sale ID
        receiptBuilder.append(String.format("Employee:            %s\n", employeeName));
        receiptBuilder.append("----------------------------------------\n\n");
        receiptBuilder.append(String.format("%-40s %-6s %-6s\n", "Item", "Qty", "Price")); // Header with proper spacing
        receiptBuilder.append("----------------------------------------\n");

        for (SaleItem item : saleItems) {
            String productName = getProductNameById(item.getProductId()); // Retrieve product name using productId
            receiptBuilder.append(String.format("%-40s %-6d ₱ %-6.2f\n",
                    productName, item.getQuantity(), item.getPrice() * item.getQuantity()));
        }

        receiptBuilder.append("----------------------------------------\n");
        receiptBuilder.append(String.format("Subtotal:                     ₱ %.2f\n", subtotal));
        receiptBuilder.append(String.format("VAT (12%%):                    ₱ %.2f\n", vat));
        receiptBuilder.append("----------------------------------------\n");
        receiptBuilder.append(String.format("TOTAL:                       ₱ %.2f\n", total));
        receiptBuilder.append("----------------------------------------\n");

        // Add amount and change details to the receipt
        receiptBuilder.append(String.format("Amount Given:                ₱ %.2f\n", amount));
        receiptBuilder.append(String.format("Change:                     ₱ %.2f\n", change));
        receiptBuilder.append(String.format("Total Amount to be Paid:    ₱ %.2f\n", totalAmount));

        receiptBuilder.append("----------------------------------------\n\n");
        receiptBuilder.append(String.format("Payment Method: %s\n", paymentMethod));
        receiptBuilder.append("Thank you for your purchase!\n");
        receiptBuilder.append("       Please come again!");

        // Set the text to the JTextArea
        receiptTxtArea.setText(receiptBuilder.toString());
    }

    private String getProductNameById(int productId) {
        String productName = "Unknown Product"; // Default value
        String query = "SELECT product_name FROM tbl_products WHERE product_id = ?";

        // Using the sqlConnector to create a connection
        sqlConnector dbConnector = new sqlConnector(); // Create an instance of sqlConnector

        try (Connection conn = dbConnector.createConnection(); // Establish connection
                 PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, productId);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                productName = rs.getString("product_name");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return productName;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Receipt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton printButton;
    private javax.swing.JTextArea receiptTxtArea;
    // End of variables declaration//GEN-END:variables
}

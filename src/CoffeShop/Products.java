/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CoffeShop;

/**
 *
 * @author prince
 */
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import CoffeShop.UserAuthenticate; // Adjust the package name as needed
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Products extends javax.swing.JFrame {

    private UserAuthenticate authenticatedUser; // Instance variable

    /**
     * Creates new form Products
     */
    public Products() {

        initComponents(); // Call method to initialize components

        setTitle("Products");

        ImageIcon icon = IconLoader.getIcon();
        Image img = icon.getImage();
        jComboBox1.addItem("Coffee");
        jComboBox1.addItem("Tea");
        jComboBox1.addItem("Snacks");
        jComboBox1.removeItem("Item 1");
        jComboBox1.removeItem("Item 2");
        jComboBox1.removeItem("Item 3");
        jComboBox1.removeItem("Item 4");
        setIconImage(img);
        Fetch();
        txtPrice.addKeyListener(new KeyAdapter() {
        public void keyTyped(KeyEvent e) {
        char c = e.getKeyChar();
        if (!(Character.isDigit(c) || c == '.' || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            e.consume();
        }
    }
});

    }
  private ImageIcon resizeImage(String imagePath, int width, int height) {
        // Load the image
        ImageIcon originalIcon = new ImageIcon(imagePath);
        Image originalImage = originalIcon.getImage();
        // Resize the image
        Image resizedImage = originalImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        // Return the resized ImageIcon
        return new ImageIcon(resizedImage);
    }
    
    

    // Setter method to pass and display authenticatedUser details
    public void setAuthenticatedUser(UserAuthenticate authenticatedUser) {
        this.authenticatedUser = authenticatedUser;
        setUserDetails(authenticatedUser); // Update UI based on user details
    }

    // Method to set and display user details (name, role, and image)
    public void setUserDetails(UserAuthenticate authenticatedUser) {
        this.authenticatedUser = authenticatedUser; // Set the authenticatedUser passed

        if (authenticatedUser != null) {
            // Assuming these are your GUI builder variable names for the components
            employeeRoleTxt.setText(authenticatedUser.getRole());
            employeNamerTxt.setText(authenticatedUser.getName());

            // Resize and set employee image icon
            ImageIcon userImage = resizeImage(authenticatedUser.getImagePath(), 60, 60); // Adjust size as needed
            UserImageIcon.setIcon(userImage);
        } else {
            System.out.println("User details not set.");
        }
    }

    sqlConnector conn = new sqlConnector();
    PreparedStatement prepState;
    ResultSet rs;
    
    private boolean imageSelected = false;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //set image to label
    
    
    private String imageLocation;
    private String imagePath() {
    if (imageSelected) {
        return imageLocation;
    } else {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new FileNameExtensionFilter("Image files", "jpg", "png"));
        int response = fileChooser.showOpenDialog(null);
        if (response == JFileChooser.APPROVE_OPTION) {
            imageLocation = fileChooser.getSelectedFile().getAbsolutePath();
            imageSelected = true;

            ImageIcon originalIcon = new ImageIcon(imageLocation);
            Image originalImage = originalIcon.getImage();
            Image scaledImage = originalImage.getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            ImageIcon scaledIcon = new ImageIcon(scaledImage);
            jLabel2.setIcon(scaledIcon);

            return imageLocation;
        }
        return null;
    }
}
    
    private void displayImage() {
    if (imageLocation != null) {
        ImageIcon originalIcon = new ImageIcon(imageLocation);
        Image originalImage = originalIcon.getImage();
        Image scaledImage = originalImage.getScaledInstance(120, 120, Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        jLabel2.setIcon(scaledIcon);
    }
}

    private void addImageToFolder() {
        if (imageLocation == null) {
            JOptionPane.showMessageDialog(null, "Please select an image first.");
            return;
        }

        String destinationFolder = "src/products/";
        String extension = getFileExtension(imageLocation);

        if (!extension.equalsIgnoreCase("jpg") && !extension.equalsIgnoreCase("png")) {
            JOptionPane.showMessageDialog(null, "Only jpg and png are allowed");
            resetLabel();
            return;
        }

        String imageName = System.currentTimeMillis() + "." + extension;
        File file = new File(destinationFolder + imageName);
        try {
            BufferedImage image = ImageIO.read(new File(imageLocation));
            ImageIO.write(image, extension, file);
            isEmpty = false;
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private String getFileExtension(String path) {
        int dotIndex = path.lastIndexOf('.');
        if (dotIndex >= 0) {
            return path.substring(dotIndex + 1);
        } else {
            return "";
        }
    }

    
    
    boolean isEmpty = false;
    //checks if the text fields are empty
    public void checkEmptyFields() {
    if (txtName.getText().isEmpty() || txtPrice.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Text fields cannot be empty", "Error", JOptionPane.ERROR_MESSAGE);
        isEmpty = true;
    } else {
    }
    }
    //add to database
    private void addToDatabase() 
{
    checkEmptyFields();
    if (isEmpty == true){
        return;
    }
    String productName = txtName.getText();
    String priceText = txtPrice.getText();
    String category = (String)jComboBox1.getSelectedItem();
    if (imageLocation == null) {
        JOptionPane.showMessageDialog(this, "Please select an image first.");
        return;
    }
    if (!isValidProductName(productName)) 
    {
        JOptionPane.showMessageDialog(this, "Product name can only contain letters, spaces, and hyphens.");
        return;
    }

    if (!isValidPrice(priceText)) 
    {
        JOptionPane.showMessageDialog(this, "Price can only contain numbers.");
        return;
    }
    checkEmptyFields();
    double price = Double.parseDouble(priceText);
    
    try (
        PreparedStatement checkStmt = conn.createConnection().prepareStatement("SELECT COUNT(*) FROM tbl_products WHERE product_name = ?");
        PreparedStatement prepState = conn.createConnection().prepareStatement("INSERT INTO tbl_products (product_name"
                                                                                + ", product_category"
                                                                                + ", product_price"
                                                                                + ", product_ImagePath) "
                                                                                + "VALUES (?, ?, ?, ?)")
    ) 
    {
        checkStmt.setString(1, productName);
        ResultSet rs = checkStmt.executeQuery();
        rs.next();
        checkEmptyFields();
        if (rs.getInt(1) > 0) 
        {
            JOptionPane.showMessageDialog(this, "This product already exists");
            return;
        }

        prepState.setString(1, productName);
        prepState.setString(2, category);
        prepState.setDouble(3, price);
        prepState.setString(4, imageLocation);

        int execUp = prepState.executeUpdate();

        if (execUp == 1) 
        {
            JOptionPane.showMessageDialog(this, "Added successfully");
            isEmpty = false;
            clearFields();
            Fetch();
        } else 
        {
            JOptionPane.showMessageDialog(this, "Cannot add. (Check for duplicate product names or contact system administrator)");
        }
        conn.createConnection().close();
    } catch (SQLException ex) {
        Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
    }
}

   // checks kung tama nilagay ng user
    private boolean isValidProductName(String name) {
        return name.chars().allMatch(c -> Character.isLetter(c) || Character.isSpaceChar(c) || c == '-');
    }
    private boolean isValidPrice(String price) {
    return price.matches("\\d+(\\.\\d+)?");
}
    private void clearFields() {
         ImageIcon clear = new ImageIcon();
        txtName.setText("");
        txtPrice.setText("");
        jLabel2.setIcon(clear);
    }
    private void resetLabel() {
          ImageIcon icon = new ImageIcon();
        jLabel2.setIcon(icon);
        jLabel2.setText("");
        imageSelected = false;
    }
    //fetch
    private void Fetch(){
        try {
            int q;
            prepState = conn.createConnection().prepareStatement("SELECT * FROM tbl_products");
            rs = prepState.executeQuery();
            
            ResultSetMetaData rsmt = rs.getMetaData();
            q = rsmt.getColumnCount();
            
            DefaultTableModel dtm = (DefaultTableModel)imageLabel.getModel();
            
            dtm.setRowCount(0);
            while(rs.next()){
                Vector vector = new Vector();
                
                for(int i = 1; i <= q; i++){
                    vector.add(rs.getString("product_id"));
                    vector.add(rs.getString("product_name"));
                    vector.add(rs.getString("product_category"));
                    vector.add(rs.getString("product_price"));
                    vector.add(rs.getString("product_ImagePath"));
                }
                dtm.addRow(vector);
            }
            conn.createConnection().close();
        } catch (SQLException ex) {
            Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private boolean isDecimal(String price) {
    return price.matches("\\d+(\\.\\d+)?");
}
    //update table and database
  private void updateProduct() {
    checkEmptyFields();
    if (isEmpty) {
        return;
    }
    String productName = txtName.getText();
    String priceText = txtPrice.getText();
    String category = (String) jComboBox1.getSelectedItem();
    if (!isValidProductName(productName)) {
        JOptionPane.showMessageDialog(this, "Product name can only contain letters, spaces, and hyphens.");
        return;
    }
    if (!isValidPrice(priceText) && isDecimal(priceText)) {
        JOptionPane.showMessageDialog(this, "Price can only contain numbers.");
        return;
    }

    int selectedRow = imageLabel.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a product to update.");
        return;
    }

    // id na lang gamit. id din naman pala gagamitin >:|
    int productId = Integer.parseInt((String) imageLabel.getValueAt(selectedRow, 0));

    // Get the current image path from the table
    String currentImagePath = (String) imageLabel.getValueAt(selectedRow, 4);

    // Update gamit selected id
    try {
        PreparedStatement prepState = conn.createConnection().prepareStatement(
            "UPDATE tbl_products SET product_name = ?, product_category = ?, product_price = ?, product_ImagePath = ? WHERE product_id = ?"
        );
        prepState.setString(1, productName);
        prepState.setString(2, category);
        prepState.setDouble(3, Double.parseDouble(priceText));
        if (imageLocation != null) {
            prepState.setString(4, imageLocation);
        } else {
            prepState.setString(4, currentImagePath);
        }
        prepState.setInt(5, productId);
        prepState.executeUpdate();

        JOptionPane.showMessageDialog(this, "Updated successfully");
        isEmpty = false;
        Fetch();
        clearFields();
        resetLabel();

    } catch (SQLException ex) {
        Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error: " + ex.toString());
    } finally {
        try {
            conn.createConnection().close();
        } catch (SQLException ex) {
            Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
    //delete product
    private void deleteProduct() {
    checkEmptyFields();
    if (isEmpty) {
        return;
    }
    String productName = txtName.getText();
    if (!isValidProductName(productName)) {
        JOptionPane.showMessageDialog(this, "Product name can only contain letters, spaces, and hyphens.");
        return;
    }
    try {
        // Check if the product exists
        PreparedStatement checkStmt = conn.createConnection().prepareStatement("SELECT COUNT(*) FROM tbl_products WHERE product_name = ?");
        checkStmt.setString(1, productName);
        ResultSet rs = checkStmt.executeQuery();
        rs.next();

        if (rs.getInt(1) == 0) {
            JOptionPane.showMessageDialog(this, "This product does not exist.");
            clearFields();
            return;
        }

        // Delete the product
        PreparedStatement prepState = conn.createConnection().prepareStatement("DELETE FROM tbl_products WHERE product_name=?;");
        prepState.setString(1, productName);
        int rowsAffected = prepState.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Deleted successfully");
            Fetch();
            clearFields();
            isEmpty = false;
        } else {
            JOptionPane.showMessageDialog(this, "Failed to delete product");
        }

    } catch (SQLException ex) {
        Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Error: " + ex.toString());
    } finally {
        try {
            conn.createConnection().close();
        } catch (SQLException ex) {
            Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
    public void getTableData(){
          int selectedRow = imageLabel.getSelectedRow();

            if (selectedRow != -1) {
                // get data sa clicked row
                String name = (String) imageLabel.getValueAt(selectedRow, 1);
                String category = (String) imageLabel.getValueAt(selectedRow, 2);
                double price = Double.parseDouble((String) imageLabel.getValueAt(selectedRow, 3));
                String imagePath = (String) imageLabel.getValueAt(selectedRow, 4);
                //set depende sa kung ano pinli
                txtName.setText(name);
                jComboBox1.setSelectedItem(category);
                txtPrice.setText(String.valueOf(price));
                ImageIcon imageIcon = resizeImage(imagePath, 120, 120); 
                jLabel2.setIcon(imageIcon);
            }
    }


    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        UserImageIcon = new javax.swing.JLabel();
        employeeRoleTxt = new javax.swing.JLabel();
        employeNamerTxt = new javax.swing.JLabel();
        logutIcon = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        navbarLeft = new javax.swing.JPanel();
        btnOption = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        itemDetails = new javax.swing.JPanel();
        tblProducts = new javax.swing.JPanel();
        productTable = new javax.swing.JScrollPane();
        imageLabel = new javax.swing.JTable();
        crudOption = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        bUpdate = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        header.setBackground(new java.awt.Color(81, 56, 33));

        UserImageIcon.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        UserImageIcon.setForeground(new java.awt.Color(255, 255, 255));
        UserImageIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        employeeRoleTxt.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        employeeRoleTxt.setForeground(new java.awt.Color(255, 255, 255));
        employeeRoleTxt.setText("User");
        employeeRoleTxt.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        employeNamerTxt.setForeground(new java.awt.Color(255, 255, 255));
        employeNamerTxt.setText("Employee Name");
        employeNamerTxt.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        logutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout.png"))); // NOI18N
        logutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logutIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logutIconMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 245, 238));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Products");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(UserImageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(employeNamerTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(employeeRoleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 953, Short.MAX_VALUE)
                .addComponent(logutIcon)
                .addGap(30, 30, 30))
            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(headerLayout.createSequentialGroup()
                    .addGap(439, 439, 439)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(564, Short.MAX_VALUE)))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(employeeRoleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(employeNamerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addComponent(UserImageIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logutIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(headerLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        navbarLeft.setBackground(new java.awt.Color(255, 192, 135));

        btnOption.setBackground(new java.awt.Color(255, 192, 135));
        btnOption.setPreferredSize(new java.awt.Dimension(167, 341));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/report.png"))); // NOI18N
        jButton2.setText("Reports");
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHideActionText(true);
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton2.setIconTextGap(8);
        jButton2.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/menu.png"))); // NOI18N
        jButton1.setText("Menu");
        jButton1.setToolTipText("");
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.setIconTextGap(8);
        jButton1.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/product.png"))); // NOI18N
        jButton3.setText("Products");
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton3.setIconTextGap(8);
        jButton3.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/employee.png"))); // NOI18N
        jButton4.setText("Employees");
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton4.setIconTextGap(8);
        jButton4.setPreferredSize(new java.awt.Dimension(80, 35));
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnOptionLayout = new javax.swing.GroupLayout(btnOption);
        btnOption.setLayout(btnOptionLayout);
        btnOptionLayout.setHorizontalGroup(
            btnOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnOptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOptionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        btnOptionLayout.setVerticalGroup(
            btnOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnOptionLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout navbarLeftLayout = new javax.swing.GroupLayout(navbarLeft);
        navbarLeft.setLayout(navbarLeftLayout);
        navbarLeftLayout.setHorizontalGroup(
            navbarLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navbarLeftLayout.createSequentialGroup()
                .addComponent(btnOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        navbarLeftLayout.setVerticalGroup(
            navbarLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navbarLeftLayout.createSequentialGroup()
                .addComponent(btnOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 285, Short.MAX_VALUE))
        );

        getContentPane().add(navbarLeft, java.awt.BorderLayout.LINE_START);

        itemDetails.setBackground(new java.awt.Color(255, 192, 135));

        tblProducts.setBackground(new java.awt.Color(142, 104, 69));
        tblProducts.setPreferredSize(new java.awt.Dimension(728, 931));

        imageLabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Category", "price", "image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        imageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageLabelMouseClicked(evt);
            }
        });
        productTable.setViewportView(imageLabel);

        javax.swing.GroupLayout tblProductsLayout = new javax.swing.GroupLayout(tblProducts);
        tblProducts.setLayout(tblProductsLayout);
        tblProductsLayout.setHorizontalGroup(
            tblProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productTable, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                .addContainerGap())
        );
        tblProductsLayout.setVerticalGroup(
            tblProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblProductsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(productTable, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        crudOption.setBackground(new java.awt.Color(255, 192, 135));
        crudOption.setForeground(new java.awt.Color(204, 204, 204));
        crudOption.setOpaque(false);

        jLabel38.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel38.setText("Name");

        jLabel39.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel39.setText("Category");

        jLabel40.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel40.setText("Price");

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel41.setText("Image Path");

        txtName.setBackground(new java.awt.Color(255, 245, 238));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtPrice.setBackground(new java.awt.Color(255, 245, 238));

        bUpdate.setForeground(new java.awt.Color(0, 0, 0));
        bUpdate.setText("Update");
        bUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bUpdate.setPreferredSize(new java.awt.Dimension(80, 40));
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        jButton24.setForeground(new java.awt.Color(0, 0, 0));
        jButton24.setText("Delete");
        jButton24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton24.setPreferredSize(new java.awt.Dimension(80, 40));
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setForeground(new java.awt.Color(0, 0, 0));
        jButton25.setText("Add");
        jButton25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton25.setPreferredSize(new java.awt.Dimension(80, 40));
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("Add Image");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setMaximumSize(null);
        jComboBox1.setPreferredSize(new java.awt.Dimension(68, 26));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(60, 60));
        jPanel1.setMinimumSize(new java.awt.Dimension(60, 60));
        jPanel1.add(jLabel2);

        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout crudOptionLayout = new javax.swing.GroupLayout(crudOption);
        crudOption.setLayout(crudOptionLayout);
        crudOptionLayout.setHorizontalGroup(
            crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crudOptionLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(crudOptionLayout.createSequentialGroup()
                        .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, crudOptionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        crudOptionLayout.setVerticalGroup(
            crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(crudOptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel40)
                .addGap(7, 7, 7)
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(crudOptionLayout.createSequentialGroup()
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(crudOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );

        javax.swing.GroupLayout itemDetailsLayout = new javax.swing.GroupLayout(itemDetails);
        itemDetails.setLayout(itemDetailsLayout);
        itemDetailsLayout.setHorizontalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addComponent(tblProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crudOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        itemDetailsLayout.setVerticalGroup(
            itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tblProducts, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
            .addGroup(itemDetailsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(crudOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(itemDetails, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1341, 709));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        addToDatabase();
        resetLabel();
    }//GEN-LAST:event_jButton25ActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        updateProduct();
        
    }//GEN-LAST:event_bUpdateActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        deleteProduct();
        resetLabel();
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.imagePath();
        this.addImageToFolder();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void imageLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageLabelMouseClicked
         getTableData();
    }//GEN-LAST:event_imageLabelMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        clearFields();
        resetLabel();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void logutIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logutIconMouseClicked
        // TODO add your handling code here:
        Login callLogin = new Login();
        callLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logutIconMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Employees callEmployees = new Employees();
        callEmployees.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user
        callEmployees.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Products callProducts = new Products();
        callProducts.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user;
        callProducts.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Dashboard callDashboard = new Dashboard(); // Instantiate Dashboard
        callDashboard.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user
        callDashboard.setVisible(true);
        this.dispose(); // Close the current frame
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Reports callReports = new Reports();
        callReports.setAuthenticatedUser(authenticatedUser); // Pass the authenticated user
        callReports.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Products().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UserImageIcon;
    private javax.swing.JButton bUpdate;
    private javax.swing.JPanel btnOption;
    private javax.swing.JPanel crudOption;
    private javax.swing.JLabel employeNamerTxt;
    private javax.swing.JLabel employeeRoleTxt;
    private javax.swing.JPanel header;
    private javax.swing.JTable imageLabel;
    private javax.swing.JPanel itemDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logutIcon;
    private javax.swing.JPanel navbarLeft;
    private javax.swing.JScrollPane productTable;
    private javax.swing.JPanel tblProducts;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
